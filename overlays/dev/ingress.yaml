apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    # External-DNS management to create DNS records
    external-dns.alpha.kubernetes.io/hostname: itfuture.click
    # ALB-specific annotations for better control
    # auto-import the Amazon Certificate Manager cert
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:022698001278:certificate/b1abf9e7-73b4-4099-bb3b-ec595dc3c61f
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Must listen on port 80 to redirect
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    # SSL Redirect must be first action
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    #alb.ingress.kubernetes.io/ssl-redirect: '443'
    # custom annotations (redirects, header versioning) (if any):
    alb.ingress.kubernetes.io/actions.viewer-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "Path":"/", "Query": "#{query}", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-2016-08"
    alb.ingress.kubernetes.io/tags: "Environment=dev,GitOps=true,karpenter.sh/discovery=app-platform-dev" # TODO change ???
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthcheck-healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/healthcheck-unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/group.name: "dev-ingress"
    alb.ingress.kubernetes.io/group.order: "1"
  labels:
    env: dev
spec:
  # Specify the use of the ALB Ingress Controller
  ingressClassName: alb
  rules:
    - host: itfuture.click
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  name: front-svc-port
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: zmp-ingress
#   annotations:
#     # External-DNS management to create DNS records
#     external-dns.alpha.kubernetes.io/hostname: zmp-dev.mycoso.cloud
#     # ALB-specific annotations for better control
#     # auto-import the Amazon Certificate Manager cert
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:728497176303:certificate/3f4f5147-5c87-45f7-9756-822122b7af23
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Must listen on port 80 to redirect
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
#     # SSL Redirect must be first action
#     alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
#     #alb.ingress.kubernetes.io/ssl-redirect: '443'
#     # custom annotations (redirects, header versioning) (if any):
#     alb.ingress.kubernetes.io/actions.viewer-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "Path":"/", "Query": "#{query}", "StatusCode": "HTTP_301"}}'
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/backend-protocol: HTTP
#     alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-2016-08"
#     alb.ingress.kubernetes.io/tags: "Environment=dev,GitOps=true,karpenter.sh/discovery=app-platform-dev"
#     alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
#     alb.ingress.kubernetes.io/healthcheck-path: "/"
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
#     alb.ingress.kubernetes.io/healthcheck-healthy-threshold-count: "2"
#     alb.ingress.kubernetes.io/healthcheck-unhealthy-threshold-count: "2"
#     alb.ingress.kubernetes.io/group.name: "dev-ingress"
#     alb.ingress.kubernetes.io/group.order: "2"

# spec:
#   # Specify the use of the ALB Ingress Controller
#   ingressClassName: alb
#   rules:
#     - host: zmp-dev.mycoso.cloud
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: frontend-zmp-service
#                 port:
#                   name: zmp-svc-port